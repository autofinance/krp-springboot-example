version: '3'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - '2181:2181'
    networks:
      localnet:
        ipv4_address: 192.168.169.80
  kafka:
    image: wurstmeister/kafka
    ports:
      - '9092:9092'
    depends_on:
      - zookeeper
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=${KAFKA_HOST:-192.168.169.70}
      - KAFKA_CREATE_TOPICS=events:1:1,errors:1:1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      localnet:
        ipv4_address: 192.168.169.70
  schema-registry:
    image: confluentinc/cp-schema-registry:4.1.1
    hostname: schema-registry
    ports:
      - "8081:8081"
    depends_on:
      - kafka
      - zookeeper
    environment:
      - SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL=zookeeper:2181
      - SCHEMA_REGISTRY_HOST_NAME=schema-registry
      - SCHEMA_REGISTRY_LISTENERS=http://schema-registry:8081
      - SCHEMA_REGISTRY_DEBUG=true
    networks:
      localnet:
        ipv4_address: 192.168.169.50
  kafka-ui:
    image: landoop/kafka-topics-ui
    hostname: kafka-ui
    ports:
      - '8888:8000'
    depends_on:
      - kafka-rest
    environment:
      - KAFKA_REST_PROXY_URL=http://kafka-rest:8082
      - PROXY=true
    networks:
      localnet:
        ipv4_address: 192.168.169.40
  kafka-rest:
    image: confluentinc/cp-kafka-rest
    hostname: kafka-rest
    ports:
      - '8082:8082'
    depends_on:
      - zookeeper
      - kafka
      - schema-registry
    environment:
      - KAFKA_REST_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_REST_SCHEMA_REGISTRY_URL=schema-registry:8081
#      - KAFKA_REST_HOST_NAME=kafka-rest
      - KAFKA_REST_HOST_NAME=192.168.169.30
#      - KAFKA_REST_LISTENERS=http://kafka-rest:8082
      - KAFKA_REST_LISTENERS=http://192.168.169.30:8082
    networks:
      localnet:
        ipv4_address: 192.168.169.30
networks:
  localnet:
    ipam:
      config:
        - subnet: 192.168.169.0/24
